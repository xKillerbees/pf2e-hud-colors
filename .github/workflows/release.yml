name: Package & Draft Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write  # needed to create releases and upload assets

jobs:
  build-and-draft:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set variables from tag
        id: vars
        run: |
          TAG="${GITHUB_REF_NAME}"                  # e.g. v1.0.0
          VERSION="${TAG#v}"                        # strip leading v -> 1.0.0
          OWNER="${GITHUB_REPOSITORY_OWNER}"
          REPO="$(basename "$GITHUB_REPOSITORY")"
          MANIFEST_URL="https://raw.githubusercontent.com/${OWNER}/${REPO}/${TAG}/module.json"
          DOWNLOAD_URL="https://github.com/${OWNER}/${REPO}/releases/download/${TAG}/${REPO}-${TAG}.zip"

          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          echo "repo=$REPO" >> $GITHUB_OUTPUT
          echo "manifest_url=$MANIFEST_URL" >> $GITHUB_OUTPUT
          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT

      - name: Show plan
        run: |
          echo "Tag:          ${{ steps.vars.outputs.tag }}"
          echo "Version:      ${{ steps.vars.outputs.version }}"
          echo "Manifest URL: ${{ steps.vars.outputs.manifest_url }}"
          echo "Download URL: ${{ steps.vars.outputs.download_url }}"

      - name: Install jq and zip
        run: sudo apt-get update && sudo apt-get install -y jq zip

      - name: Patch module.json with version/URLs
        run: |
          set -e
          test -f module.json || { echo "module.json not found at repo root"; exit 1; }

          jq \
            --arg v "${{ steps.vars.outputs.version }}" \
            --arg manifest "${{ steps.vars.outputs.manifest_url }}" \
            --arg download "${{ steps.vars.outputs.download_url }}" \
            '
            .version = $v
            | .manifest = $manifest
            | .download = $download
            ' module.json > module.json.tmp

          mv module.json.tmp module.json
          echo "Updated module.json:"
          cat module.json

      - name: Build zip
        run: |
          ZIP_NAME="${{ steps.vars.outputs.repo }}-${{ steps.vars.outputs.tag }}.zip"
          # zip all module files from repo root (exclude common junk)
          zip -r "$ZIP_NAME" . \
            -x "*.git*" \
            -x "node_modules/*" \
            -x "dist/*" \
            -x ".DS_Store" \
            -x ".idea/*" \
            -x ".vscode/*"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Create draft release and upload asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          draft: true
          generate_release_notes: true
          files: ${{ env.ZIP_NAME }}
